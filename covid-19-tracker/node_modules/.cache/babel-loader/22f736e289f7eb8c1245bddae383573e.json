{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\40753\\\\Desktop\\\\covid19\\\\covid-19-tracker\\\\src\\\\util.js\";\nimport React from 'react';\nimport numeral from 'numeral';\nimport { Circle, Popup } from 'react-leaflet';\nconst casesTypeColors = {\n  cases: {\n    hex: \"#CC1034\",\n    rgb: \"rgb(204, 16, 52)\",\n    half_op: \"rgba(204, 16, 52, 0.5)\",\n    multiplier: 800\n  },\n  recovered: {\n    hex: \"#7dd71d\",\n    rgb: \"rgb(125, 215, 29)\",\n    half_op: \"rgba(125, 215, 29, 0.5)\",\n    multiplier: 1200\n  },\n  deaths: {\n    hex: \"#fb4443\",\n    rgb: \"rgb(251, 68, 67)\",\n    half_op: \"rgba(251, 68, 67, 0.5)\",\n    multiplier: 2000\n  }\n};\nexport const sortData = data => {\n  const sortedData = [...data];\n  return sortedData.sort((a, b) => b.cases - a.cases);\n};\nexport const showDataOnMap = (data, casesType = 'cases') => {\n  data.map(country => /*#__PURE__*/React.createElement(Circle, {\n    center: [country.countryInfo.lat, country.countryInfo.long],\n    fillOpacity: 0.4,\n    color: casesTypeColors[casesType].hex,\n    fillColor: casesTypeColors[casesType].hex,\n    radius: Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Popup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"popasdasdasdassd\"))));\n};","map":{"version":3,"sources":["C:/Users/40753/Desktop/covid19/covid-19-tracker/src/util.js"],"names":["React","numeral","Circle","Popup","casesTypeColors","cases","hex","rgb","half_op","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","showDataOnMap","casesType","map","country","countryInfo","lat","long","Math","sqrt"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,eAA9B;AAEA,MAAMC,eAAe,GAAG;AACpBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,GAAG,EAAE,SADF;AAEHC,IAAAA,GAAG,EAAE,kBAFF;AAGHC,IAAAA,OAAO,EAAE,wBAHN;AAIHC,IAAAA,UAAU,EAAE;AAJT,GADa;AAOpBC,EAAAA,SAAS,EAAE;AACPJ,IAAAA,GAAG,EAAE,SADE;AAEPC,IAAAA,GAAG,EAAE,mBAFE;AAGPC,IAAAA,OAAO,EAAE,yBAHF;AAIPC,IAAAA,UAAU,EAAE;AAJL,GAPS;AAapBE,EAAAA,MAAM,EAAE;AACJL,IAAAA,GAAG,EAAE,SADD;AAEJC,IAAAA,GAAG,EAAE,kBAFD;AAGJC,IAAAA,OAAO,EAAE,wBAHL;AAIJC,IAAAA,UAAU,EAAE;AAJR;AAbY,CAAxB;AAqBA,OAAO,MAAMG,QAAQ,GAAGC,IAAI,IAAI;AAC5B,QAAMC,UAAU,GAAG,CAAC,GAAGD,IAAJ,CAAnB;AAEA,SAAOC,UAAU,CAACC,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAWA,CAAC,CAACZ,KAAF,GAAUW,CAAC,CAACX,KAAvC,CAAP;AACH,CAJM;AAMP,OAAO,MAAMa,aAAa,GAAG,CAACL,IAAD,EAAOM,SAAS,GAAG,OAAnB,KAA+B;AACxDN,EAAAA,IAAI,CAACO,GAAL,CAASC,OAAO,iBACZ,oBAAC,MAAD;AACI,IAAA,MAAM,EAAE,CAACA,OAAO,CAACC,WAAR,CAAoBC,GAArB,EAA0BF,OAAO,CAACC,WAAR,CAAoBE,IAA9C,CADZ;AAEI,IAAA,WAAW,EAAE,GAFjB;AAGI,IAAA,KAAK,EAAEpB,eAAe,CAACe,SAAD,CAAf,CAA2Bb,GAHtC;AAII,IAAA,SAAS,EAAEF,eAAe,CAACe,SAAD,CAAf,CAA2Bb,GAJ1C;AAKI,IAAA,MAAM,EACFmB,IAAI,CAACC,IAAL,CAAUL,OAAO,CAACF,SAAD,CAAjB,IAAgCf,eAAe,CAACe,SAAD,CAAf,CAA2BV,UANnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,CATJ,CADJ;AAeH,CAhBM","sourcesContent":["import React from 'react';\r\nimport numeral from 'numeral';\r\nimport { Circle, Popup } from 'react-leaflet';\r\n\r\nconst casesTypeColors = {\r\n    cases: {\r\n        hex: \"#CC1034\",\r\n        rgb: \"rgb(204, 16, 52)\",\r\n        half_op: \"rgba(204, 16, 52, 0.5)\",\r\n        multiplier: 800,\r\n    },\r\n    recovered: {\r\n        hex: \"#7dd71d\",\r\n        rgb: \"rgb(125, 215, 29)\",\r\n        half_op: \"rgba(125, 215, 29, 0.5)\",\r\n        multiplier: 1200,\r\n    },\r\n    deaths: {\r\n        hex: \"#fb4443\",\r\n        rgb: \"rgb(251, 68, 67)\",\r\n        half_op: \"rgba(251, 68, 67, 0.5)\",\r\n        multiplier: 2000,\r\n    },\r\n};\r\n\r\nexport const sortData = data => {\r\n    const sortedData = [...data];\r\n\r\n    return sortedData.sort((a, b) =>  b.cases - a.cases);\r\n};\r\n\r\nexport const showDataOnMap = (data, casesType = 'cases') => {\r\n    data.map(country =>  (\r\n        <Circle\r\n            center={[country.countryInfo.lat, country.countryInfo.long]}\r\n            fillOpacity={0.4}\r\n            color={casesTypeColors[casesType].hex}\r\n            fillColor={casesTypeColors[casesType].hex}\r\n            radius={\r\n                Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n            }\r\n        >\r\n            <Popup>\r\n                <h1>popasdasdasdassd</h1>\r\n            </Popup>\r\n        </Circle>\r\n    ))\r\n}"]},"metadata":{},"sourceType":"module"}