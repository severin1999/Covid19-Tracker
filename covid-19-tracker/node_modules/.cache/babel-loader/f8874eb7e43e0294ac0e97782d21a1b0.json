{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\40753\\\\Desktop\\\\covid19\\\\covid-19-tracker\\\\src\\\\LineGraph.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nconst options = {\n  legend: {\n    display: false\n  },\n  elements: {\n    point: {\n      radius: 0\n    }\n  }\n};\n\nfunction LineGraph() {\n  const [data, setData] = useState({});\n\n  const buildChartData = (data, casesType = 'cases') => {\n    const chartData = [];\n    let lastDataPoint;\n\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        const newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint\n        };\n        chartData.push(newDataPoint);\n      }\n\n      lastDataPoint = data[casesType][date];\n    }\n\n    return chartData;\n  };\n\n  useEffect(() => {\n    fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120').then(response => response.json()).then(data => {\n      let chartData = buildChartData(data);\n      setData(chartData);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: {\n      datasets: [{\n        backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n        borderColor: \"#CC1034\",\n        data: data\n      }]\n    },\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default LineGraph;","map":{"version":3,"sources":["C:/Users/40753/Desktop/covid19/covid-19-tracker/src/LineGraph.js"],"names":["React","useState","useEffect","Line","options","legend","display","elements","point","radius","LineGraph","data","setData","buildChartData","casesType","chartData","lastDataPoint","date","cases","newDataPoint","x","y","push","fetch","then","response","json","datasets","backgroundColor","borderColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL,GADI;AAIZC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAE;AACHC,MAAAA,MAAM,EAAE;AADL;AADD;AAJE,CAAhB;;AAWA,SAASC,SAAT,GAAqB;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMY,cAAc,GAAG,CAACF,IAAD,EAAOG,SAAS,GAAG,OAAnB,KAA+B;AAClD,UAAMC,SAAS,GAAG,EAAlB;AACA,QAAIC,aAAJ;;AAEA,SAAI,IAAIC,IAAR,IAAgBN,IAAI,CAACO,KAArB,EAA4B;AACxB,UAAGF,aAAH,EAAkB;AACd,cAAMG,YAAY,GAAG;AACjBC,UAAAA,CAAC,EAAEH,IADc;AAEjBI,UAAAA,CAAC,EAAEV,IAAI,CAACG,SAAD,CAAJ,CAAgBG,IAAhB,IAAwBD;AAFV,SAArB;AAIAD,QAAAA,SAAS,CAACO,IAAV,CAAeH,YAAf;AACH;;AACDH,MAAAA,aAAa,GAAGL,IAAI,CAACG,SAAD,CAAJ,CAAgBG,IAAhB,CAAhB;AACH;;AACD,WAAOF,SAAP;AACH,GAfD;;AAiBAb,EAAAA,SAAS,CAAC,MAAM;AACZqB,IAAAA,KAAK,CAAC,4DAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUb,IAAI,IAAI;AACV,UAAII,SAAS,GAAGF,cAAc,CAACF,IAAD,CAA9B;AACAC,MAAAA,OAAO,CAACG,SAAD,CAAP;AACH,KALL;AAMH,GAPQ,EAON,EAPM,CAAT;AAWA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AACI,IAAA,IAAI,EAAE;AACFY,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,eAAe,EAAE,wBADnB;AAEEC,QAAAA,WAAW,EAAE,SAFf;AAGElB,QAAAA,IAAI,EAAEA;AAHR,OADQ;AADR,KADV;AAUI,IAAA,OAAO,EAAEP,OAVb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAgBH;;AAED,eAAeM,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst options = {\r\n    legend: {\r\n        display: false\r\n    },\r\n    elements: {\r\n        point: {\r\n            radius: 0,\r\n        },\r\n    },\r\n}\r\n\r\nfunction LineGraph() {\r\n    const [data, setData] = useState({}); \r\n    \r\n    const buildChartData = (data, casesType = 'cases') => {\r\n        const chartData = [];\r\n        let lastDataPoint;\r\n\r\n        for(let date in data.cases) {\r\n            if(lastDataPoint) {\r\n                const newDataPoint = {\r\n                    x: date,\r\n                    y: data[casesType][date] - lastDataPoint\r\n                }\r\n                chartData.push(newDataPoint);\r\n            }\r\n            lastDataPoint = data[casesType][date];\r\n        }\r\n        return chartData;\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                let chartData = buildChartData(data, );\r\n                setData(chartData);\r\n            })\r\n    }, []);\r\n\r\n \r\n\r\n    return (\r\n        <div>\r\n            <Line\r\n                data={{\r\n                    datasets: [\r\n                      {\r\n                        backgroundColor: \"rgba(204, 16, 52, 0.5)\",\r\n                        borderColor: \"#CC1034\",\r\n                        data: data,\r\n                      },\r\n                    ],\r\n                  }}\r\n                options={options}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LineGraph\r\n"]},"metadata":{},"sourceType":"module"}